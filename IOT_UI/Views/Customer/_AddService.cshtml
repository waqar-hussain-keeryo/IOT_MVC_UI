<!-- Add Digital Service Modal -->
<div class="modal fade" id="addService" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5">Add Digital Service</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Input Form -->
                <div id="inputForm">
                    <form id="serviceForm">
                        <input type="hidden" id="serviceId" value="">
                        <div class="mb-3">
                            <label for="serviceStartDate">Start Date</label>
                            <input type="date" class="form-control" placeholder="Start Date" id="serviceStartDate" required>
                        </div>
                        <div class="mb-3">
                            <label for="serviceEndDate">End Date</label>
                            <input type="date" class="form-control" placeholder="End Date" id="serviceEndDate" required>
                        </div>
                        <div class="mb-3 d-none" id="isActiveContainer">
                            <label for="isActive">Is Active?</label>
                            <input type="checkbox" id="isActive">
                        </div>
                        <div class="mb-3">
                            <label for="notificationUserSelect">Notification Users</label>
                            <select id="notificationUserSelect" class="form-select" multiple required>
                                <option>User 1</option>
                                <option>User 2</option>
                                <option>User 3</option>
                            </select>
                        </div>
                        <div class="mb-3" style="display: flex; justify-content: flex-end;">
                            <button type="button" class="btn btn-primary" onclick="saveServiceData()">Add Service</button>
                        </div>
                    </form>
                </div>
                <hr />
                <!-- Data Table -->
                <div id="dataTableContainer" class="mt-4">
                    <table class="table table-striped" id="serviceTable">
                        <thead>
                            <tr>
                                <th>Start Date</th>
                                <th>End Date</th>
                                <th>Is Active</th>
                                <th>Users</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="dataTableBody">
                            <!-- Data rows will be added here -->
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveServiceData()">Save Service</button>
            </div>
        </div>
    </div>
</div>

<script>

        // Handle modal hidden event to reset form and hide 'Is Active' checkbox
    document.getElementById('addService').addEventListener('hidden.bs.modal', function () {
        editingServiceIndex = null; // Clear the editing index
        document.getElementById('serviceForm').reset(); // Reset the form
        document.getElementById('isActiveContainer').classList.add('d-none'); // Hide the checkbox
    });


    let editingServiceIndex = null; // Flag for editing mode

    $(document).ready(function() {
        // Initialize DataTable if it's not already initialized
        if (!$.fn.DataTable.isDataTable('#serviceTable')) {
            $('#serviceTable').DataTable({
                "pageLength": 5,
                "columnDefs": [
                    {
                        "targets": -1, // Last column
                        "data": null,
                        "defaultContent": '<div class="dropdown">' +
                                            '<i class="bi bi-three-dots-vertical menu-button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false"></i>' +
                                            '<ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">' +
                                            '<li><a class="dropdown-item" href="#" onclick="editServiceRow(this)">Edit</a></li>' +
                                            '<li><a class="dropdown-item" href="#" onclick="deleteServiceRow(this)">Delete</a></li>' +
                                            '</ul>' +
                                            '</div>'
                    }
                ]
            });
        }
    });

    function saveServiceData() {
        // Get input values
        const startDate = document.getElementById('serviceStartDate').value;
        const endDate = document.getElementById('serviceEndDate').value;
        const isActive = document.getElementById('isActive').checked ? 'Yes' : 'No';
        const selectedUsers = Array.from(document.getElementById('notificationUserSelect').selectedOptions)
                                  .map(option => option.text)
                                  .join(', ');

        // Check if inputs are empty
        if (!startDate || !endDate) {
            alert('Please fill out all fields.');
            return;
        }

        // Parse dates
        const newStartDate = new Date(startDate);
        const newEndDate = new Date(endDate);

        // Check for overlapping services
        if (isOverlapping(newStartDate, newEndDate)) {
            alert('Service dates overlap with existing service dates within the same month.');
            return;
        }

        // Get the DataTable instance
        const table = $('#serviceTable').DataTable();

        if (editingServiceIndex !== null) {
            // Update existing row
            table.row(editingServiceIndex).data([
                startDate,
                endDate,
                isActive,
                selectedUsers,
                `<div class="dropdown">
                    <i class="bi bi-three-dots-vertical menu-button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false"></i>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <li><a class="dropdown-item" href="#" onclick="editServiceRow(this)">Edit</a></li>
                        <li><a class="dropdown-item" href="#" onclick="deleteServiceRow(this)">Delete</a></li>
                    </ul>
                </div>`
            ]).draw();

            // Reset the flag
            editingServiceIndex = null;
        } else {
            // Add new row
            table.row.add([
                startDate,
                endDate,
                isActive,
                selectedUsers,
                `<div class="dropdown">
                    <i class="bi bi-three-dots-vertical menu-button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false"></i>
                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <li><a class="dropdown-item" href="#" onclick="editServiceRow(this)">Edit</a></li>
                        <li><a class="dropdown-item" href="#" onclick="deleteServiceRow(this)">Delete</a></li>
                    </ul>
                </div>`
            ]).draw();
        }

        // Clear input fields
        document.getElementById('serviceForm').reset();

        // Close the modal
        const modal = bootstrap.Modal.getInstance(document.getElementById('addService'));
    }

    function isOverlapping(newStartDate, newEndDate) {
        const table = $('#serviceTable').DataTable();
        const data = table.rows().data();

        for (let i = 0; i < data.length; i++) {
            const rowData = data[i];
            const existingStartDate = new Date(rowData[0]);
            const existingEndDate = new Date(rowData[1]);

            if (datesOverlap(newStartDate, newEndDate, existingStartDate, existingEndDate)) {
                return true;
            }
        }
        return false;
    }

    function datesOverlap(start1, end1, start2, end2) {
        return start1 <= end2 && end1 >= start2;
    }

        function editServiceRow(link) {
        const row = $(link).closest('tr');
        const cells = row.find('td');

        // Set form fields with row data
        document.getElementById('serviceStartDate').value = cells[0].textContent;
        document.getElementById('serviceEndDate').value = cells[1].textContent;
        const isActive = cells[2].textContent.trim() === 'Yes';

        // Show the 'Is Active' checkbox if it was previously hidden
        const isActiveContainer = document.getElementById('isActiveContainer');
        isActiveContainer.classList.remove('d-none');
        document.getElementById('isActive').checked = isActive;

        // Handle the users select box
        const users = cells[3].textContent.split(',').map(user => user.trim());
        const select = document.getElementById('notificationUserSelect');
        Array.from(select.options).forEach(option => {
            option.selected = users.includes(option.text);
        });

        // Set the editing flag
        editingServiceIndex = $('#serviceTable').DataTable().row(row).index();

        // Show the modal
        const modal = new bootstrap.Modal(document.getElementById('addService'));
        modal.show();
    }

    function deleteServiceRow(link) {
        if (confirm('Are you sure you want to delete this service?')) {
            const table = $('#serviceTable').DataTable();
            const row = $(link).closest('tr');

            // Remove the row from the DataTable
            table.row(row).remove().draw();

            // Clear the input fields in the form
            document.getElementById('serviceForm').reset();
        }
    }
</script>
